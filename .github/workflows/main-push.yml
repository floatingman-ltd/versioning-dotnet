name: Push into main

on:
  workflow_dispatch:
  push:
    branches: 
      - 'main'
    paths:
      - 'src/**'

jobs:
  test:
    name: Test Project
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Setup .NET Core
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 7.0.x

    - name: Test
      run: >
        dotnet test 
        /p:CollectCoverage=true 
        /p:CoverletOutput=TestResults/ 
        /p:CoverletOutputFormat=lcov
        Version.sln
    
  semantic-release:
      needs: test
      name: Create a package release
      runs-on: ubuntu-latest
      steps:
      - uses: actions/checkout@v3

      - name: Setup .NET Core
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 7.0.x

      - name: Bump version and push tag
        id: tag_version
        uses: mathieudutour/github-tag-action@v6.1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          release_branches: 'main'

      - name: Create a GitHub release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ steps.tag_version.outputs.new_tag }}
          name: Release ${{ steps.tag_version.outputs.new_tag }}
          body: ${{ steps.tag_version.outputs.changelog }}
          generateReleaseNotes: true
      - name: Create Nuget Package
        run: dotnet build -c Release ./src/Versioner/Versioner.csproj && dotnet pack -c Release -p:PackageVersion=${{ steps.tag_version.outputs.new_version }} -o . ./src/Versioner/Versioner.csproj
      - name: Upload Package for Publishing
        uses: actions/upload-artifact@v3
        with:
          name: PackedLib
          path: ./*.nupkg

  nuget-publish:
    needs: semantic-release
    name: Publish to Nuget
    runs-on: ubuntu-latest
    steps:
    - name: Download built project  
      uses: actions/download-artifact@v3
      with:
        name: PackedLib
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 7.0.x
    - name: Push Package to Nuget
      run: dotnet nuget push --api-key ${{secrets.NUGET_API_KEY}} --source "https://api.nuget.org/v3/index.json" *.nupkg