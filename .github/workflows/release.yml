name: Release

on:
  workflow_dispatch:
  push:
    tags:
    - "v[0-9]+.[0-9]+.[0-9]"

jobs:

  nuget-publish:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
      # with:
      #   fetch-depth: 0
      
    - name: Verify Commit Exists
      run: |
        git fetch --no-tags --prune --depth=1 origin +refs/heads/*:refs/remotes/origin/*
        git branch --remote --contains | grep origin/main
        
    - name: Set VERSION variable from tag
      run: echo "VERSION=${GITHUB_REF/refs\/tags\/v/}" >> $GITHUB_ENV

    - name: Config nuget
      run: >
        dotnet nuget add source "https://nuget.pkg.github.com/floatingman-ltd/index.json" 
        --name "GITHUB"
        --username waltiam 
        --password ${{ secrets.GITHUB_TOKEN }} 
        --store-password-in-clear-text

    - name: Build
      run: dotnet build --configuration Release /p:Version=${VERSION}

    - name: Test
      run: dotnet test --configuration Release /p:Version=${VERSION} --no-build

    - name: Pack
      run: dotnet pack --configuration Release /p:Version=${VERSION} --no-build --output .

    - name: Publish nuget to Github
      run: >
        dotnet nuget push **/*.nupkg 
        --api-key ${{ secrets.GITHUB_TOKEN }} 
        --source "GITHUB"

    # - name: Push
    #   run: dotnet nuget push **/*.${VERSION}.nupkg --source https://nuget.pkg.github.com/floatingman-ltd/index.json --api-key ${GITHUB_TOKEN}
    #   env:
    #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    # - name: Setup Gitversion
    #   uses: dotnet/nbgv@master
    #   id: nbgv

    # - name: Pack Nuget Package
    #   run: >
    #     dotnet pack Versioner/Versioner.csproj --configuration Release 
    #     /p:AssemblyVersion='${{ steps.nbgv.outputs.assemblySemVer }}' 
    #     /p:FileVersion='${{ steps.nbgv.outputs.assemblySemFileVer }}' 
    #     /p:InformationalVersion='${{ steps.nbgv.outputs.nuGetVersion }}' 
    #     /p:Version='${{ steps.nbgv.outputs.nuGetVersion }}'

    # # - name: Publish nuget to Github
    # #   run: >
    # #     dotnet nuget push **/*.nupkg 
    # #     --api-key ${{ secrets.NUGET_API_KEY }} 
    # #     --source "nuget.org"
    # #     

    # - name: Display GitVersion outputs
    #   run: |
    #     echo "CloudBuildNumber: ${{ steps.nbgv.outputs.CloudBuildNumber }}"
    #     echo "VersionFileFound: ${{ steps.nbgv.outputs.VersionFileFound }}"
    #     echo "AssemblyVersion: ${{ steps.nbgv.outputs.AssemblyVersion }}"
    #     echo "AssemblyFileVersion: ${{ steps.nbgv.outputs.AssemblyFileVersion }}"
    #     echo "AssemblyInformationalVersion: ${{ steps.nbgv.outputs.AssemblyInformationalVersion }}"
    #     echo "PublicRelease: ${{ steps.nbgv.outputs.PublicRelease }}"
    #     echo "PrereleaseVersion: ${{ steps.nbgv.outputs.PrereleaseVersion }}"
    #     echo "PrereleaseVersionNoLeadingHyphen: ${{ steps.nbgv.outputs.PrereleaseVersionNoLeadingHyphen }}"
    #     echo "SimpleVersion: ${{ steps.nbgv.outputs.SimpleVersion }}"
    #     echo "BuildNumber: ${{ steps.nbgv.outputs.BuildNumber }}"
    #     echo "VersionRevision: ${{ steps.nbgv.outputs.VersionRevision }}"
    #     echo "MajorMinorVersion: ${{ steps.nbgv.outputs.MajorMinorVersion }}"
    #     echo "VersionMajor: ${{ steps.nbgv.outputs.VersionMajor }}"
    #     echo "VersionMinor: ${{ steps.nbgv.outputs.VersionMinor }}"
    #     echo "GitCommitId: ${{ steps.nbgv.outputs.GitCommitId }}"
    #     echo "GitCommitIdShort: ${{ steps.nbgv.outputs.GitCommitIdShort }}"
    #     echo "GitCommitDate: ${{ steps.nbgv.outputs.GitCommitDate }}"
    #     echo "VersionHeight: ${{ steps.nbgv.outputs.VersionHeight }}"
    #     echo "VersionHeightOffset: ${{ steps.nbgv.outputs.VersionHeightOffset }}"
    #     echo "Version: ${{ steps.nbgv.outputs.Version }}"
    #     echo "BuildMetadataFragment: ${{ steps.nbgv.outputs.BuildMetadataFragment }}"
    #     echo "NuGetPackageVersion: ${{ steps.nbgv.outputs.NuGetPackageVersion }}"
    #     echo "ChocolateyPackageVersion: ${{ steps.nbgv.outputs.ChocolateyPackageVersion }}"
    #     echo "NpmPackageVersion: ${{ steps.nbgv.outputs.NpmPackageVersion }}"
    #     echo "SemVer1: ${{ steps.nbgv.outputs.SemVer1 }}"
    #     echo "SemVer2: ${{ steps.nbgv.outputs.SemVer2 }}"
