name: push to any

on:
  workflow_dispatch:
  push:
    branches-ignore:
      [main]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.400

    - name: Install dependencies
      run: dotnet restore

    - name: Build
      run: dotnet build --configuration Release --no-restore

    - name: Test and Coverage
      # dotnet test src/Floatingman.CommandLineParser.Tests/Floatingman.CommandLineParser.Tests.csproj  /p:CollectCoverage=true /p:CoverletOutput=TestResults/ /p:CoverletOutputFormat=lcov
      # The project name is not actually needed at this point - it will build and tests each test project.
      run: >
        dotnet test 
        /p:CollectCoverage=true 
        /p:CoverletOutput=TestResults/ 
        /p:CoverletOutputFormat=lcov

    - name: Publish coverage report to coveralls.io   
      uses: coverallsapp/github-action@master   
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }} 
        path-to-lcov: Versioner.Tests/TestResults/coverage.info 

    - name: Setup Gitversion
      uses: dotnet/nbgv@master
      id: nbgv

    - name: Display GitVersion outputs
      run: |
        echo "CloudBuildNumber: ${{ steps.nbgv.outputs.CloudBuildNumber }}"
        echo "Minor: ${{ steps.nbgv.outputs.minor }}"
        echo "Patch: ${{ steps.nbgv.outputs.patch }}"
        echo "PreReleaseTag: ${{ steps.nbgv.outputs.preReleaseTag }}"
        echo "PreReleaseTagWithDash: ${{ steps.nbgv.outputs.preReleaseTagWithDash }}"
        echo "PreReleaseLabel: ${{ steps.nbgv.outputs.preReleaseLabel }}"
        echo "PreReleaseNumber: ${{ steps.nbgv.outputs.preReleaseNumber }}"
        echo "WeightedPreReleaseNumber: ${{ steps.nbgv.outputs.weightedPreReleaseNumber }}"
        echo "BuildMetaData: ${{ steps.gitversion.nbgv.buildMetaData }}"
        echo "BuildMetaDataPadded: ${{ steps.nbgv.outputs.buildMetaDataPadded }}"
        echo "FullBuildMetaData: ${{ steps.nbgv.outputs.fullBuildMetaData }}"
        echo "MajorMinorPatch: ${{ steps.nbgv.outputs.majorMinorPatch }}"
        echo "SemVer: ${{ steps.nbgv.outputs.semVer }}"
        echo "LegacySemVer: ${{ steps.gitversion.outputs.legacySemVer }}"
        echo "LegacySemVerPadded: ${{ steps.nbgv.outputs.legacySemVerPadded }}"
        echo "AssemblySemVer: ${{ steps.nbgv.outputs.assemblySemVer }}"
        echo "AssemblySemFileVer: ${{ steps.nbgv.outputs.assemblySemFileVer }}"
        echo "FullSemVer: ${{ steps.nbgv.outputs.fullSemVer }}"
        echo "InformationalVersion: ${{ steps.nbgv.outputs.informationalVersion }}"
        echo "BranchName: ${{ steps.nbgv.outputs.branchName }}"
        echo "EscapedBranchName: ${{ steps.nbgv.outputs.escapedBranchName }}"
        echo "Sha: ${{ steps.nbgv.outputs.sha }}"
        echo "ShortSha: ${{ steps.nbgv.outputs.shortSha }}"
        echo "NuGetVersionV2: ${{ steps.nbgv.outputs.nuGetVersionV2 }}"
        echo "NuGetVersion: ${{ steps.nbgv.outputs.nuGetVersion }}"
        echo "NuGetPreReleaseTagV2: ${{ steps.nbgv.outputs.nuGetPreReleaseTagV2 }}"
        echo "NuGetPreReleaseTag: ${{ steps.nbgv.outputs.nuGetPreReleaseTag }}"
        echo "VersionSourceSha: ${{ steps.nbgv.outputs.versionSourceSha }}"
        echo "CommitsSinceVersionSource: ${{ steps.nbgv.outputs.commitsSinceVersionSource }}"
        echo "CommitsSinceVersionSourcePadded: ${{ steps.nbgv.outputs.commitsSinceVersionSourcePadded }}"
        echo "UncommittedChanges: ${{ steps.nbgv.outputs.uncommittedChanges }}"
        echo "CommitDate: ${{ steps.nbgv.outputs.commitDate }}" 